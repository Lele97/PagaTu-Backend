server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: gateway-service
  cloud:
    config:
      enabled: false
    gateway:
      default-filters:
        - name: CircuitBreaker
          args:
            name: defaultCircuitBreaker
            fallback-uri: forward:/fallback/default
      routes:
        - id: auth-service
          uri: lb://auth
          predicates:
            - Path=/api/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker
                fallback-uri: forward:/fallback/auth
        - id: coffee-service
          uri: lb://coffe
          predicates:
            - Path=/api/coffee/**
          filters:
            - name: CircuitBreaker
              args:
                name: coffeeCircuitBreaker
                fallback-uri: forward:/fallback/coffee
        - id: email-service
          uri: lb://mail
          predicates:
            - Path=/api/email/**
          filters:
            - name: CircuitBreaker
              args:
                name: emailCircuitBreaker
                fallback-uri: forward:/fallback/email

  main:
    web-application-type: reactive

resilience4j:
  circuitbreaker:
    instances:
      authCircuitBreaker:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
      coffeeCircuitBreaker:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
      emailCircuitBreaker:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
      defaultCircuitBreaker:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
  timelimiter:
    instances:
      default:
        timeout-duration: 10s

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakers

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive.function.client: DEBUG
    com.pagatu.gateway_service.filter: DEBUG

jwt:
  secret: ${JWT_SECRET:pagatu_super_secure_secret_key_for_jwt_authentication_2025}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:8888,https://*.trycloudflare.com,https://*.ngrok-free.app}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,PATCH,DELETE,OPTIONS,HEAD}
  allowed-headers: ${CORS_ALLOWED_HEADERS:Authorization,Content-Type,Accept-Language,Cache-Control,X-Requested-With,ngrok-skip-browser-warning,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,Access-Control-Allow-Origin,X-Reset-Token}