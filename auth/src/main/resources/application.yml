server:
  port: 8081

spring:
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: >
          userEvent:com.pagatu.auth.event.UserEvent,
          eventType:com.pagatu.auth.entity.EventType,
          resetPasswordMail:com.pagatu.auth.event.ResetPasswordMailEvent

    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.pagatu.auth.event
        spring.json.use.type.headers: true
        spring.json.type.mapping: >
          userEvent:com.pagatu.auth.event.UserEvent,
          eventType:com.pagatu.auth.entity.EventType,
          resetPasswordMail:com.pagatu.auth.event.ResetPasswordMailEvent

    topics:
      user-service: user-service
      resetPasswordMail: reset-password-mail
      user-service-reset-token: user-service-reset-token

  application:
    name: auth

  cloud:
    config:
      enabled: false

  profiles:
    active: dev

  datasource:
    url: ${SECOND_DATASOURCE_URL:jdbc:mysql://127.0.0.1:3306/auth?allowPublicKeyRetrieval=true&useSSL=false}
    username: ${SPRING_DATASOURCE_DEV_USERNAME}
    password: ${SPRING_DATASOURCE_DEV_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    properties:
      hibernate:
        globally_quoted_identifiers: true
        dialect: org.hibernate.dialect.MySQLDialect
        hbm2ddl.auto: update
        show_sql: true
        format_sql: true
        metadata_builder.contributor: none

  h2:
    console:
      enabled: false
      path: /h2-console
    settings:
      web-allow-others: true
      trace: false

logging:
  level:
    com.pagatu.coffee: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.kafka: DEBUG
    org.springframework.transaction: DEBUG
    root: INFO



---
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/auth}
    username: ${SPRING_DATASOURCE_PROD_USERNAME}
    password: ${SPRING_DATASOURCE_PROD_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: false
    properties:
      hibernate:
        format_sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  h2:
    console:
      enabled: false
      path: /h2-console
    settings:
      web-allow-others: true
      trace: false

---

rate-limiter:
  reset-password:
    max-attempts: ${RATE_LIMITER_MAX_ATTEMPTS:3}
    time-window-hours: ${RATE_LIMITER_TIME_WINDOW_HOURS:1}
    enabled: ${RATE_LIMITER_ENABLED:true}

jwt:
  secret: ${JWT_SECRET:pagatu_super_secure_secret_key_for_jwt_authentication_2025}
  expiration: ${JWT_EXPIRATION:86400000}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

caffe:
  service:
    url: ${CAFFE_SERVICE_URL:http://coffee:8082}

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method