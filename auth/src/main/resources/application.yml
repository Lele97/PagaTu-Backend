server:
  port: 8081

spring:
  application:
    name: auth
  cloud:
    config:
      enabled: false

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:h2:file:./auth/data/authdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MySQL}
    username: ${SPRING_DATASOURCE_USERNAME:sa}
    password: ${SPRING_DATASOURCE_PASSWORD:}
    driver-class-name: org.h2.Driver

  second-datasource:
    url: ${SECOND_DATASOURCE_URL:jdbc:mysql://127.0.0.1:3306/auth?allowPublicKeyRetrieval=true&useSSL=false}
    username: ${SECOND_DATASOURCE_USERNAME:root}
    password: ${SECOND_DATASOURCE_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        globally_quoted_identifiers: true
        dialect: org.hibernate.dialect.MySQLDialect
        hbm2ddl.auto: create
        show_sql: true
        format_sql: true
        # Disable sequence metadata extraction for MySQL
        metadata_builder.contributor: none

  h2:
    console:
      enabled: true
      path: /h2-console
    settings:
      web-allow-others: true
      trace: false

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
        # Add these properties to the producer configuration
      properties:
        spring.json.type.mapping: >
          userEvent:com.pagatu.auth.event.UserEvent,
          eventType:com.pagatu.auth.entity.EventType,
          resetPasswordMail:com.pagatu.auth.event.ResetPasswordMailEvent
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.pagatu.auth.event
        spring.json.use.type.headers: true
        spring.json.type.mapping: >
          userEvent:com.pagatu.auth.event.UserEvent,
          eventType:com.pagatu.auth.entity.EventType,
          resetPasswordMail:com.pagatu.auth.event.ResetPasswordMailEvent

    topics:
      user-service: user-service
      resetPasswordMail: reset-password-mail

jwt:
  secret: ${JWT_SECRET:pagatu_super_secure_secret_key_for_jwt_authentication_2025}
  expiration: ${JWT_EXPIRATION:86400000}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

caffe:
  service:
    url: ${CAFFE_SERVICE_URL:http://coffee:8082}
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method